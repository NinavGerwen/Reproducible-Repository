## Data generation is based on three models, therefore we created functions for
## the calculations of every model (1PL - 2PL - 3PL)
source("Functions/model-calculations.R")
source("Functions/data-generation.R")
source("Functions/missingness.R")
source("Functions/fit-indices calculations.R")
## LTM to fit the required models
require(ltm)
## DPLYR for some tidying
require(dplyr)
## MAGRITTR for the pipe
require(magrittr)
test_length <- as.factor(c(5, 10, 20))
sample_size <- as.factor(c(200, 300, 500, 1000, 1500))
sample_size <- as.factor(c(200, 210, 230, 280, 300))
n_sim <- 10
## We vary three factors, and for the simulation study, we
## cross-examine them through a nested for loop
null_results <- data.frame(test_length = NA, sample_size = NA, TLI_M = NA,
TLI_SE = NA, CFI_M = NA, CFI_SE = NA)
set.seed(1248)
for(a in levels(test_length)){
for(b in levels(sample_size)){
tli_values <- rep(NA, n_sim)
cfi_values <- rep(NA, n_sim)
temp_n <- as.numeric(as.character(b))
temp_k <- as.numeric(as.character(a))
for(j in 1:n_sim){
## Then, for every condition, generate data according to the
## current condition
temp_data <- data.gen(n = temp_n, k = temp_k, model = "2PL")
l_0 <- ltm(temp_data ~ z1, IRT.param = TRUE)$log.Lik
aggr_data <- temp_data %>%
as.data.frame(.) %>%
mutate(fr = rep(1, temp_n)) %>%
aggregate(fr ~ ., data = ., sum)
tli_values[j] <- TLI(l_0, temp_data, aggr_data, temp_n, temp_k)
cfi_values[j] <- CFI(l_0, temp_data, aggr_data, temp_n, temp_k)
print(tli_values[j])
}
null_results <- rbind(null_results, c(a, b, mean(tli_values), sd(tli_values),
mean(cfi_values), sd(cfi_values)))
}
}
null_results <- null_results[-1 ,]
rownames(null_results) <- NULL
## Now for miss-specification condition:
alt_results <- data.frame(test_length = NA, sample_size = NA, TLI_M = NA,
TLI_SE = NA, CFI_M = NA, CFI_SE = NA)
set.seed(1248)
for(a in levels(test_length)){
for(b in levels(sample_size)){
tli_values <- rep(NA, n_sim)
cfi_values <- rep(NA, n_sim)
temp_n <- as.numeric(as.character(b))
temp_k <- as.numeric(as.character(a))
for(j in 1:n_sim){
## Then, for every condition, generate data according to the
## current condition
temp_data <- data.gen(n = temp_n, k = temp_k, model = "3PL")
l_0 <- ltm(temp_data ~ z1, IRT.param = TRUE)$log.Lik
aggr_data <- temp_data %>%
as.data.frame(.) %>%
mutate(fr = rep(1, temp_n)) %>%
aggregate(fr ~ ., data = ., sum)
tli_values[j] <- TLI(l_0, temp_data, aggr_data, temp_n, temp_k)
cfi_values[j] <- CFI(l_0, temp_data, aggr_data, temp_n, temp_k)
}
alt_results <- rbind(alt_results, c(a, b, mean(tli_values), sd(tli_values),
mean(cfi_values), sd(cfi_values)))
}
}
alt_results <- alt_results[-1 ,]
rownames(alt_results) <- NULL
View(alt_results)
View(null_results)
View(alt_results)
View(null_results)
View(alt_results)
View(null_results)
View(alt_results)
View(null_results)
View(alt_results)
View(null_results)
View(alt_results)
View(null_results)
View(aggr_data)
View(null_results)
View(null_results)
View(alt_results)
alt_results <- data.frame(test_length = NA, sample_size = NA, TLI_M = NA,
TLI_SE = NA, CFI_M = NA, CFI_SE = NA)
set.seed(1248)
for(a in levels(test_length)){
for(b in levels(sample_size)){
tli_values <- rep(NA, n_sim)
cfi_values <- rep(NA, n_sim)
temp_n <- as.numeric(as.character(b))
temp_k <- as.numeric(as.character(a))
for(j in 1:n_sim){
## Then, for every condition, generate data according to the
## current condition
temp_data <- data.gen(n = temp_n, k = temp_k, model = "3PL")
l_0 <- ltm(temp_data ~ z1, IRT.param = TRUE)$log.Lik
aggr_data <- temp_data %>%
as.data.frame(.) %>%
mutate(fr = rep(1, temp_n)) %>%
aggregate(fr ~ ., data = ., sum)
tli_values[j] <- TLI(l_0, temp_data, aggr_data, temp_n, temp_k)
cfi_values[j] <- CFI(l_0, temp_data, aggr_data, temp_n, temp_k)
print(tli_values[j])
}
alt_results <- rbind(alt_results, c(a, b, mean(tli_values), sd(tli_values),
mean(cfi_values), sd(cfi_values)))
}
}
alt_results <- alt_results[-1 ,]
rownames(alt_results) <- NULL
sample_size <- as.factor(c(100, 150, 160, 180, 200))
n_sim <- 10
## We vary three factors, and for the simulation study, we
## cross-examine them through a nested for loop
null_results <- data.frame(test_length = NA, sample_size = NA, TLI_M = NA,
TLI_SE = NA, CFI_M = NA, CFI_SE = NA)
set.seed(1248)
for(a in levels(test_length)){
for(b in levels(sample_size)){
tli_values <- rep(NA, n_sim)
cfi_values <- rep(NA, n_sim)
temp_n <- as.numeric(as.character(b))
temp_k <- as.numeric(as.character(a))
for(j in 1:n_sim){
## Then, for every condition, generate data according to the
## current condition
temp_data <- data.gen(n = temp_n, k = temp_k, model = "2PL")
l_0 <- ltm(temp_data ~ z1, IRT.param = TRUE)$log.Lik
aggr_data <- temp_data %>%
as.data.frame(.) %>%
mutate(fr = rep(1, temp_n)) %>%
aggregate(fr ~ ., data = ., sum)
tli_values[j] <- TLI(l_0, temp_data, aggr_data, temp_n, temp_k)
cfi_values[j] <- CFI(l_0, temp_data, aggr_data, temp_n, temp_k)
print(tli_values[j])
}
null_results <- rbind(null_results, c(a, b, mean(tli_values), sd(tli_values),
mean(cfi_values), sd(cfi_values)))
}
}
View(null_results)
alt_results <- data.frame(test_length = NA, sample_size = NA, TLI_M = NA,
TLI_SE = NA, CFI_M = NA, CFI_SE = NA)
set.seed(1248)
for(a in levels(test_length)){
for(b in levels(sample_size)){
tli_values <- rep(NA, n_sim)
cfi_values <- rep(NA, n_sim)
temp_n <- as.numeric(as.character(b))
temp_k <- as.numeric(as.character(a))
for(j in 1:n_sim){
## Then, for every condition, generate data according to the
## current condition
temp_data <- data.gen(n = temp_n, k = temp_k, model = "3PL")
l_0 <- ltm(temp_data ~ z1, IRT.param = TRUE)$log.Lik
aggr_data <- temp_data %>%
as.data.frame(.) %>%
mutate(fr = rep(1, temp_n)) %>%
aggregate(fr ~ ., data = ., sum)
tli_values[j] <- TLI(l_0, temp_data, aggr_data, temp_n, temp_k)
cfi_values[j] <- CFI(l_0, temp_data, aggr_data, temp_n, temp_k)
print(tli_values[j])
}
alt_results <- rbind(alt_results, c(a, b, mean(tli_values), sd(tli_values),
mean(cfi_values), sd(cfi_values)))
}
}
View(alt_results)
sample_size <- as.factor(c(100, 150, 160, 180, 200))
n_sim <- 10
## We vary three factors, and for the simulation study, we
## cross-examine them through a nested for loop
null_results <- data.frame(test_length = NA, sample_size = NA, TLI_M = NA,
TLI_SE = NA, CFI_M = NA, CFI_SE = NA)
set.seed(1248)
for(a in levels(test_length)){
for(b in levels(sample_size)){
tli_values <- rep(NA, n_sim)
cfi_values <- rep(NA, n_sim)
temp_n <- as.numeric(as.character(b))
temp_k <- as.numeric(as.character(a))
for(j in 1:n_sim){
## Then, for every condition, generate data according to the
## current condition
temp_data <- data.gen(n = temp_n, k = temp_k, model = "2PL")
l_0 <- ltm(temp_data ~ z1, IRT.param = TRUE)$log.Lik
aggr_data <- temp_data %>%
as.data.frame(.) %>%
mutate(fr = rep(1, temp_n)) %>%
aggregate(fr ~ ., data = ., sum)
tli_values[j] <- TLI(l_0, temp_data, aggr_data, temp_n, temp_k)
cfi_values[j] <- CFI(l_0, temp_data, aggr_data, temp_n, temp_k)
print(tli_values[j])
}
null_results <- rbind(null_results, c(a, b, mean(tli_values), sd(tli_values),
mean(cfi_values), sd(cfi_values)))
}
}
null_results <- null_results[-1 ,]
rownames(null_results) <- NULL
View(null_results)
test_length <- as.factor(c(5, 7, 9))
sample_size <- as.factor(c(100, 150, 160, 180, 200))
n_sim <- 10
## We vary three factors, and for the simulation study, we
## cross-examine them through a nested for loop
null_results <- data.frame(test_length = NA, sample_size = NA, TLI_M = NA,
TLI_SE = NA, CFI_M = NA, CFI_SE = NA)
set.seed(1248)
for(a in levels(test_length)){
for(b in levels(sample_size)){
tli_values <- rep(NA, n_sim)
cfi_values <- rep(NA, n_sim)
temp_n <- as.numeric(as.character(b))
temp_k <- as.numeric(as.character(a))
for(j in 1:n_sim){
## Then, for every condition, generate data according to the
## current condition
temp_data <- data.gen(n = temp_n, k = temp_k, model = "2PL")
l_0 <- ltm(temp_data ~ z1, IRT.param = TRUE)$log.Lik
aggr_data <- temp_data %>%
as.data.frame(.) %>%
mutate(fr = rep(1, temp_n)) %>%
aggregate(fr ~ ., data = ., sum)
tli_values[j] <- TLI(l_0, temp_data, aggr_data, temp_n, temp_k)
cfi_values[j] <- CFI(l_0, temp_data, aggr_data, temp_n, temp_k)
print(tli_values[j])
}
null_results <- rbind(null_results, c(a, b, mean(tli_values), sd(tli_values),
mean(cfi_values), sd(cfi_values)))
}
}
null_results <- null_results[-1 ,]
rownames(null_results) <- NULL
test_length <- as.factor(c(5, 5, 5))
sample_size <- as.factor(c(100, 150, 160, 180, 200))
n_sim <- 10
## We vary three factors, and for the simulation study, we
## cross-examine them through a nested for loop
null_results <- data.frame(test_length = NA, sample_size = NA, TLI_M = NA,
TLI_SE = NA, CFI_M = NA, CFI_SE = NA)
set.seed(1248)
for(a in levels(test_length)){
for(b in levels(sample_size)){
tli_values <- rep(NA, n_sim)
cfi_values <- rep(NA, n_sim)
temp_n <- as.numeric(as.character(b))
temp_k <- as.numeric(as.character(a))
for(j in 1:n_sim){
## Then, for every condition, generate data according to the
## current condition
temp_data <- data.gen(n = temp_n, k = temp_k, model = "2PL")
l_0 <- ltm(temp_data ~ z1, IRT.param = TRUE)$log.Lik
aggr_data <- temp_data %>%
as.data.frame(.) %>%
mutate(fr = rep(1, temp_n)) %>%
aggregate(fr ~ ., data = ., sum)
tli_values[j] <- TLI(l_0, temp_data, aggr_data, temp_n, temp_k)
cfi_values[j] <- CFI(l_0, temp_data, aggr_data, temp_n, temp_k)
print(tli_values[j])
}
null_results <- rbind(null_results, c(a, b, mean(tli_values), sd(tli_values),
mean(cfi_values), sd(cfi_values)))
}
}
null_results <- null_results[-1 ,]
rownames(null_results) <- NULL
test_length <- as.factor(c(5, 6, 7))
sample_size <- as.factor(c(100, 150, 160, 180, 200))
n_sim <- 10
## We vary three factors, and for the simulation study, we
## cross-examine them through a nested for loop
null_results <- data.frame(test_length = NA, sample_size = NA, TLI_M = NA,
TLI_SE = NA, CFI_M = NA, CFI_SE = NA)
set.seed(1248)
for(a in levels(test_length)){
for(b in levels(sample_size)){
tli_values <- rep(NA, n_sim)
cfi_values <- rep(NA, n_sim)
temp_n <- as.numeric(as.character(b))
temp_k <- as.numeric(as.character(a))
for(j in 1:n_sim){
## Then, for every condition, generate data according to the
## current condition
temp_data <- data.gen(n = temp_n, k = temp_k, model = "2PL")
l_0 <- ltm(temp_data ~ z1, IRT.param = TRUE)$log.Lik
aggr_data <- temp_data %>%
as.data.frame(.) %>%
mutate(fr = rep(1, temp_n)) %>%
aggregate(fr ~ ., data = ., sum)
tli_values[j] <- TLI(l_0, temp_data, aggr_data, temp_n, temp_k)
cfi_values[j] <- CFI(l_0, temp_data, aggr_data, temp_n, temp_k)
print(tli_values[j])
}
null_results <- rbind(null_results, c(a, b, mean(tli_values), sd(tli_values),
mean(cfi_values), sd(cfi_values)))
}
}
null_results <- null_results[-1 ,]
rownames(null_results) <- NULL
test_length <- as.factor(c(5, 6, 7))
sample_size <- as.factor(c(100, 150, 160, 180, 200))
n_sim <- 100
## We vary three factors, and for the simulation study, we
## cross-examine them through a nested for loop
null_results <- data.frame(test_length = NA, sample_size = NA, TLI_M = NA,
TLI_SE = NA, CFI_M = NA, CFI_SE = NA)
set.seed(1248)
for(a in levels(test_length)){
for(b in levels(sample_size)){
tli_values <- rep(NA, n_sim)
cfi_values <- rep(NA, n_sim)
temp_n <- as.numeric(as.character(b))
temp_k <- as.numeric(as.character(a))
for(j in 1:n_sim){
## Then, for every condition, generate data according to the
## current condition
temp_data <- data.gen(n = temp_n, k = temp_k, model = "2PL")
l_0 <- ltm(temp_data ~ z1, IRT.param = TRUE)$log.Lik
aggr_data <- temp_data %>%
as.data.frame(.) %>%
mutate(fr = rep(1, temp_n)) %>%
aggregate(fr ~ ., data = ., sum)
tli_values[j] <- TLI(l_0, temp_data, aggr_data, temp_n, temp_k)
cfi_values[j] <- CFI(l_0, temp_data, aggr_data, temp_n, temp_k)
print(tli_values[j])
}
null_results <- rbind(null_results, c(a, b, mean(tli_values), sd(tli_values),
mean(cfi_values), sd(cfi_values)))
}
}
null_results <- null_results[-1 ,]
rownames(null_results) <- NULL
View(null_results)
test_length <- as.factor(c(5, 3, 4))
sample_size <- as.factor(c(100, 150, 160, 180, 200))
n_sim <- 100
## We vary three factors, and for the simulation study, we
## cross-examine them through a nested for loop
null_results <- data.frame(test_length = NA, sample_size = NA, TLI_M = NA,
TLI_SE = NA, CFI_M = NA, CFI_SE = NA)
set.seed(1248)
for(a in levels(test_length)){
for(b in levels(sample_size)){
tli_values <- rep(NA, n_sim)
cfi_values <- rep(NA, n_sim)
temp_n <- as.numeric(as.character(b))
temp_k <- as.numeric(as.character(a))
for(j in 1:n_sim){
## Then, for every condition, generate data according to the
## current condition
temp_data <- data.gen(n = temp_n, k = temp_k, model = "2PL")
l_0 <- ltm(temp_data ~ z1, IRT.param = TRUE)$log.Lik
aggr_data <- temp_data %>%
as.data.frame(.) %>%
mutate(fr = rep(1, temp_n)) %>%
aggregate(fr ~ ., data = ., sum)
tli_values[j] <- TLI(l_0, temp_data, aggr_data, temp_n, temp_k)
cfi_values[j] <- CFI(l_0, temp_data, aggr_data, temp_n, temp_k)
print(tli_values[j])
}
null_results <- rbind(null_results, c(a, b, mean(tli_values), sd(tli_values),
mean(cfi_values), sd(cfi_values)))
}
}
null_results <- null_results[-1 ,]
rownames(null_results) <- NULL
